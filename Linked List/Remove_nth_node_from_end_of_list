# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        
        ans = ListNode()
        length = ListNode()

        ans = head
        length = head

        l = 0
        count = 1
        
        while length != None:
            length = length.next
            l+=1
        
        if l == 1:
            return None
        
        if n == l:
            return head.next
        
        while head != None:
            if count + n == l:
                if not head.next.next:
                    head.next = None
                    count+=1
                else:   
                    head.next = head.next.next
                    count+=2
            else:
                head = head.next
                count+=1
        return ans 
